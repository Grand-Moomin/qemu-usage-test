# Kernel Makefile configuration

SHELL = /bin/sh

VPATH = $(SRCDIR)

#Make sure 32-bit mode is used.
X86 = i.86\|pentium.*\|i86pc
X86_64 = x86_64

CCPROG = gcc

ifneq (0, $(shell expr `uname -m` : '$(X86)'))
	CC = $(CCPROG)
	LD = ld
	OBJCOPY = objcopy
else
	ifneq (0, $(shell expr `uname -m` : '$(X86_64)'))
		CC = $(CCPROG) -m32
		LD = ld -melf_i386
		OBJCOPY = objcopy
	else
		CC = i386-elf-gcc
		LD = i386-elf-ld
		OBJCOPY = i386-elf-objcopy
	endif
endif

WARNINGS = -Wall -W -Wstrict-prototypes -Wmissing-prototypes -Wsystem-headers
CFLAGS = -g -msoft-float -O -march=i686
CPPFLAGS = -nostdinc -I$(SRCDIR) -I$(SRCDIR)/lib
ASFLAGS = -Wa,--gstabs
LDFLAGS = -z noseparate-code
DEPS = -MMD -MF $(@:.o=.d)

# Turn off -fstack-protector, which we don't support.
ifeq ($(strip $(shell echo | $(CC) -fno-stack-protector -E - > /dev/null 2>&1; echo $$?)),0)
CFLAGS += -fno-stack-protector
endif

# Turn off --build-id in the linker, which confuses the loader.
ifeq ($(strip $(shell $(LD) --help | grep -q build-id; echo $$?)),0)
LDFLAGS += -Wl,--build-id=none
endif

%.o: %.c
	$(CC) -c $< -o $@ $(CFLAGS) $(CPPFLAGS) $(WARNINGS) $(DEPS)

%.o: %.S
	$(CC) -c $< -o $@ $(ASFLAGS) $(CPPFLAGS) $(DEPS)

